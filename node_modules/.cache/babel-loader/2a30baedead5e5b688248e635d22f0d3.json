{"ast":null,"code":"var _jsxFileName = \"/Users/ivandimitrov/Desktop/Portfolio-Website/client/src/Containers/Terminal/Terminal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, Fragment, useEffect, useRef } from 'react';\nimport './Terminal.css';\nimport OS from './OS';\nimport CommandParser from './CommandParser';\nimport starter_command_descriptions from '../../Resources/constants/starter_command_descriptions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst create_initial_text = () => {\n  let result = [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Bored Pandas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"Welcome to the World of Bored Pandas.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 55\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"If you are a person looking for adventures, this is the right place.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 80\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 85\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this),\n  /*#__PURE__*/\n  // <p><u className=\"attention\">10 000 Unique Pandas</u> <br/>This NFT collection contains 10 000 unique Pandas who unite together on the Ethereum Blockchain.<br/><br/></p>,\n  _jsxDEV(\"p\", {\n    children: [\"To learn more about the project, use the menu above\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 68\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this) // <p>To Begin, Type:</p>\n  ]; // starter_command_descriptions.forEach((command_obj,index)=>{\n  //     result.push(<p className=\"indented\"><b className=\"I\">[{index+1}]</b> or <b className=\"I\">[open {command_obj.name}]</b>: {command_obj.description}</p>)\n  //  })\n  //  result.push(<br/>)\n\n  return result;\n};\n\nconst updateTerminalLine = (e, allPackages) => {\n  let input = e.target.value;\n  input = input.replaceAll('.', '');\n\n  if (input.length >= allPackages.path.length) {\n    allPackages.setCommand(input.substring(allPackages.path.length));\n  }\n};\n\nconst terminalSubmit = (e, allPackages) => {\n  e.preventDefault();\n  let tempArr = [...allPackages.content];\n  tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: allPackages.path + allPackages.command\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 18\n  }, this));\n  let commands = allPackages.command.split('&&');\n  commands.forEach(indivCommand => {\n    if (indivCommand === '') return;\n    let addition = CommandParser(indivCommand.trim(), allPackages);\n    if (addition === 'clear') tempArr = create_initial_text();else tempArr = tempArr.concat(addition);\n  }); //allPackages.setContent(tempArr)\n\n  allPackages.setCommand('');\n};\n\nconst Handle_allPackages = allPackages => {\n  _s();\n\n  return useEffect(() => {\n    if (allPackages.interval.current.id !== 0) clearInterval(allPackages.interval.current.id);\n    allPackages.interval.current.id = setInterval(allPackages.interval.current.function, 1000);\n    allPackages.inputRef.current.scrollIntoView();\n  }, [allPackages]);\n};\n\n_s(Handle_allPackages, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Handle_allPackages;\n\nconst PackageStates = () => {\n  _s2();\n\n  const [os] = useState(new OS());\n  const [command, setCommand] = useState('');\n  const [path, setPath] = useState(os.terminalString);\n  const [content, setContent] = useState(create_initial_text());\n  return {\n    os: os,\n    command,\n    setCommand,\n    path,\n    setPath,\n    content,\n    setContent\n  };\n};\n\n_s2(PackageStates, \"h4nS9qz2EDt+eWz1OT43CeAH0DE=\");\n\n_c2 = PackageStates;\n\nconst PackageRefs = props => {\n  _s3();\n\n  const inputRef = useRef(null);\n  const blink = useRef(false);\n  const interval = useRef({\n    id: 0,\n    function: () => {\n      if (!props.inView && inputRef.current && blink.current !== null) return;\n      inputRef.current.focus();\n      /*\r\n                  if(blink.current)\r\n                      inputRef.current.value = inputRef.current.value.replaceAll('▮','');          \r\n                  else\r\n                      inputRef.current.value = inputRef.current.value + '▮'\r\n                  \r\n                  blink.current = !blink.current\r\n                  \r\n          */\n    }\n  });\n  return {\n    inputRef: inputRef,\n    blink: blink,\n    interval: interval\n  };\n};\n\n_s3(PackageRefs, \"FYoAPjbQz+226NRql36g/JOuZHA=\");\n\n_c3 = PackageRefs;\n\nconst PackageAll = props => {\n  const packagedStates = PackageStates();\n  const packagedRefs = PackageRefs(props);\n  let allPackages = { ...packagedStates,\n    ...packagedRefs,\n    ...props\n  };\n  return allPackages;\n};\n\n_c4 = PackageAll;\n\nconst Terminal = props => {\n  const allPackages = PackageAll(props);\n  Handle_allPackages(allPackages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.display + \" main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"css-typing \",\n      children: allPackages.content.map((item, key) => {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: item\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => terminalSubmit(e, allPackages),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"terminalInput\",\n        type: \"text\",\n        autoFocus: true,\n        spellCheck: \"false\",\n        autoComplete: \"off\",\n        value: allPackages.path + allPackages.command,\n        onChange: e => updateTerminalLine(e, allPackages),\n        ref: allPackages.inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Terminal;\nexport default Terminal;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Handle_allPackages\");\n$RefreshReg$(_c2, \"PackageStates\");\n$RefreshReg$(_c3, \"PackageRefs\");\n$RefreshReg$(_c4, \"PackageAll\");\n$RefreshReg$(_c5, \"Terminal\");","map":{"version":3,"sources":["/Users/ivandimitrov/Desktop/Portfolio-Website/client/src/Containers/Terminal/Terminal.js"],"names":["React","useState","Fragment","useEffect","useRef","OS","CommandParser","starter_command_descriptions","create_initial_text","result","updateTerminalLine","e","allPackages","input","target","value","replaceAll","length","path","setCommand","substring","terminalSubmit","preventDefault","tempArr","content","push","command","commands","split","forEach","indivCommand","addition","trim","concat","Handle_allPackages","interval","current","id","clearInterval","setInterval","function","inputRef","scrollIntoView","PackageStates","os","setPath","terminalString","setContent","PackageRefs","props","blink","inView","focus","PackageAll","packagedStates","packagedRefs","Terminal","display","map","item","key"],"mappings":"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","sourcesContent":["import React, {useState, Fragment, useEffect, useRef } from 'react';\r\nimport './Terminal.css'\r\nimport  OS  from './OS'\r\nimport CommandParser from './CommandParser'\r\nimport starter_command_descriptions  from '../../Resources/constants/starter_command_descriptions.json'\r\n\r\nconst create_initial_text = ()=>{\r\n    let result = \r\n    [\r\n        <h2>Bored Pandas</h2>,\r\n        <h3>Welcome to the World of Bored Pandas.<br/><br/></h3>,\r\n        <p>If you are a person looking for adventures, this is the right place.<br/><br/></p>,\r\n       // <p><u className=\"attention\">10 000 Unique Pandas</u> <br/>This NFT collection contains 10 000 unique Pandas who unite together on the Ethereum Blockchain.<br/><br/></p>,\r\n        <p>To learn more about the project, use the menu above<br/><br/></p>,\r\n\r\n       // <p>To Begin, Type:</p>\r\n    ]\r\n   // starter_command_descriptions.forEach((command_obj,index)=>{\r\n   //     result.push(<p className=\"indented\"><b className=\"I\">[{index+1}]</b> or <b className=\"I\">[open {command_obj.name}]</b>: {command_obj.description}</p>)\r\n  //  })\r\n  //  result.push(<br/>)\r\n    return result;\r\n}\r\n\r\nconst updateTerminalLine = (e,allPackages) =>{\r\n    let input = e.target.value;\r\n    input = input.replaceAll('.','') \r\n\r\n    if(input.length >= allPackages.path.length){\r\n        allPackages.setCommand(input.substring(allPackages.path.length));\r\n    }\r\n}\r\n\r\nconst terminalSubmit = (e,allPackages) =>{\r\n    e.preventDefault();\r\n\r\n    let tempArr = [...allPackages.content]\r\n    tempArr.push(<p>{allPackages.path + allPackages.command}</p>);\r\n\r\n    let commands = allPackages.command.split('&&')\r\n    commands.forEach((indivCommand)=>{\r\n        if(indivCommand === '')\r\n            return\r\n        let addition = CommandParser(indivCommand.trim(),allPackages)\r\n        if(addition === 'clear')\r\n            tempArr = create_initial_text();\r\n        else\r\n            tempArr = tempArr.concat(addition)\r\n    }\r\n    )\r\n    //allPackages.setContent(tempArr)\r\n    allPackages.setCommand('')\r\n}\r\n\r\n\r\n\r\nconst Handle_allPackages = (allPackages) =>{\r\n    return useEffect(()=>{\r\n        if(allPackages.interval.current.id !== 0)\r\n            clearInterval(allPackages.interval.current.id)\r\n        allPackages.interval.current.id = setInterval(allPackages.interval.current.function,1000);\r\n\r\n        allPackages.inputRef.current.scrollIntoView();\r\n    },[allPackages])\r\n}\r\n\r\nconst PackageStates = () =>{\r\n    const [os] = useState(new OS())\r\n    const [command,setCommand] = useState('');\r\n    const [path,setPath] = useState(os.terminalString);\r\n    const[content,setContent] = useState(create_initial_text());\r\n    return {\r\n        os:os,\r\n        command,setCommand,\r\n        path,setPath,\r\n        content,setContent\r\n    }\r\n}\r\n\r\nconst PackageRefs = (props) =>{\r\n    const inputRef = useRef(null);\r\n    const blink = useRef(false)\r\n    const interval = useRef({\r\n        id:0,\r\n        function:()=>{\r\n            if(!props.inView && inputRef.current && blink.current !== null)\r\n                return\r\n\r\n            inputRef.current.focus();\r\n/*\r\n            if(blink.current)\r\n                inputRef.current.value = inputRef.current.value.replaceAll('▮','');          \r\n            else\r\n                inputRef.current.value = inputRef.current.value + '▮'\r\n            \r\n            blink.current = !blink.current\r\n            \r\n    */        \r\n        }\r\n    })\r\n    return {\r\n        inputRef:inputRef,\r\n        blink:blink,\r\n        interval:interval\r\n    }\r\n}\r\n\r\n\r\nconst PackageAll = (props) =>{\r\n    const packagedStates = PackageStates();\r\n    const packagedRefs = PackageRefs(props);\r\n    let allPackages={\r\n        ...packagedStates,\r\n        ...packagedRefs,\r\n        ...props\r\n    }\r\n    return allPackages\r\n}\r\n\r\n\r\nconst Terminal = (props) => {\r\n\r\n    const allPackages = PackageAll(props);\r\n    Handle_allPackages(allPackages);\r\n\r\n    return (\r\n        <div className={props.display + \" main\"}>\r\n            <div className={\"css-typing \"}>           \r\n                {\r\n                    allPackages.content.map((item,key)=>{\r\n                        return <Fragment key={key}>{item}</Fragment>;\r\n                    })\r\n                }\r\n            </div>\r\n            <form onSubmit={(e)=>terminalSubmit(e,allPackages)}>\r\n                <input data-testid='terminalInput' type=\"text\" autoFocus spellCheck=\"false\" autoComplete=\"off\" value={allPackages.path + allPackages.command} onChange={(e)=>updateTerminalLine(e,allPackages)} ref={allPackages.inputRef}/>     \r\n                <p></p>  \r\n            </form>\r\n        </div>       \r\n    );\r\n}\r\n\r\nexport default Terminal;"]},"metadata":{},"sourceType":"module"}