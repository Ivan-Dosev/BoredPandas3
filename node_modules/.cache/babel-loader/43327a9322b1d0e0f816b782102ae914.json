{"ast":null,"code":"import React from 'react'; //import default_files from '../../Resources/constants/default_files.json'\n\nconst initializeLocalStorage = () => {\n  let tree = localStorage.getItem('i-d-files');\n  if (tree !== null) return; //  saveData(default_files)\n};\n\nconst saveData = tree => {\n  let stringFileStructure = JSON.stringify(tree);\n  localStorage.setItem('i-d-files', stringFileStructure);\n};\n\nexport default class OS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.user = 'Remember to mint your exclusive membership';\n    this.terminalString = this.user;\n    initializeLocalStorage();\n    this.tree = JSON.parse(localStorage.getItem('i-files'));\n    this.currentDirectory = this.tree;\n  }\n\n  ls() {\n    return this.currentDirectory;\n  }\n\n  cd(parameters, path) {\n    let numberOfReversals = parameters.split('..').length - 1;\n    let absoluteSystemPath = path.split('/');\n    if (numberOfReversals >= absoluteSystemPath.length) return ''; //console.log('numberofrev:' + numberOfReversals  + 'before')\n    //console.log(absoluteSystemPath)\n\n    for (let i = 0; i < numberOfReversals; i++) {\n      absoluteSystemPath.pop();\n    }\n\n    let temp = [...absoluteSystemPath];\n    let subDirectory = this.tree;\n\n    for (let name in temp.splice(0, 1)) {\n      name = temp[name];\n      let index = -1;\n      subDirectory.forEach((item, ind) => {\n        if (item.name === name && item.type === 'folder') index = ind;\n      });\n      if (index >= 0) subDirectory = subDirectory[index].children;\n    }\n\n    if (numberOfReversals <= 0) {\n      let locations = parameters.split('/');\n      let cumalitivePath = path;\n\n      for (let i = 0; i < locations.length; i++) {\n        let fileName = locations[i];\n\n        for (let j = 0; j < this.currentDirectory.length; j++) {\n          let item = this.currentDirectory[j];\n\n          if (item.name === fileName && item.type === 'folder') {\n            this.terminalString = item.path;\n            this.currentDirectory = item.children;\n            cumalitivePath += '/' + item.name;\n            cumalitivePath = cumalitivePath.replaceAll(' ', '');\n          }\n        }\n      }\n\n      return cumalitivePath + ' ';\n    } else {\n      this.currentDirectory = subDirectory;\n      let result = '';\n      absoluteSystemPath.map(item => result += '/' + item);\n      result = result.replaceAll(' ', '');\n      return result.substring(1) + ' ';\n    }\n  }\n\n  mkdir(allPackages) {\n    const {\n      path,\n      commandSelector\n    } = allPackages;\n    let absoluteSystemPath = path.split('/');\n    this.currentDirectory.push({\n      \"type\": \"folder\",\n      \"name\": commandSelector[1],\n      \"path\": \"/\" + absoluteSystemPath[absoluteSystemPath.length - 2],\n      \"privileges\": [\"read\", \"write\", \"execute\"],\n      \"owner\": [this.user],\n      \"children\": []\n    });\n    this.tree[absoluteSystemPath] = this.currentDirectory;\n    saveData(this.tree);\n  }\n\n  touch(allPackages) {\n    const {\n      path,\n      commandSelector\n    } = allPackages;\n    let absoluteSystemPath = path.split('/');\n    this.currentDirectory.push({\n      \"type\": \"file\",\n      \"name\": commandSelector[1],\n      \"path\": \"/\" + absoluteSystemPath[absoluteSystemPath.length - 2],\n      \"privileges\": [\"read\", \"write\", \"execute\"],\n      \"owner\": [this.user]\n    });\n    this.tree[absoluteSystemPath] = this.currentDirectory;\n    saveData(this.tree);\n  }\n\n  mv(parameters) {}\n\n  rm(allPackages) {\n    const {\n      path,\n      commandSelector\n    } = allPackages;\n    let fileName = commandSelector[1];\n    let absoluteSystemPath = path.split('/');\n    fileName = fileName.replaceAll('*', '.*');\n    let removedItem = this.currentDirectory.findIndex(el => el.name.match(fileName));\n\n    while (removedItem >= 0) {\n      let permissions = this.currentDirectory[removedItem].owner;\n      let permissionsCheck = permissions.length === 0 || permissions.includes(this.user);\n\n      if (permissionsCheck) {\n        this.currentDirectory.splice(removedItem, 1);\n        this.tree[absoluteSystemPath] = this.currentDirectory;\n        saveData(this.tree);\n      }\n\n      removedItem = this.currentDirectory.findIndex(el => el.name.match(fileName) && permissionsCheck);\n    }\n  }\n\n  open(parameters) {\n    let index = this.currentDirectory.findIndex(el => el.name === parameters);\n    if (index >= 0) return this.currentDirectory[index].owner;else return false;\n  }\n\n  su(user) {\n    this.terminalString = this.terminalString.substring(this.terminalString.indexOf('@'));\n    this.terminalString = user + this.terminalString;\n    this.user = user;\n  }\n\n  reset() {\n    // saveData(default_files)\n    window.location.reload();\n  }\n\n}","map":{"version":3,"sources":["/Users/ivandimitrov/Desktop/Portfolio-Website/client/src/Containers/Terminal/OS.js"],"names":["React","initializeLocalStorage","tree","localStorage","getItem","saveData","stringFileStructure","JSON","stringify","setItem","OS","Component","constructor","props","user","terminalString","parse","currentDirectory","ls","cd","parameters","path","numberOfReversals","split","length","absoluteSystemPath","i","pop","temp","subDirectory","name","splice","index","forEach","item","ind","type","children","locations","cumalitivePath","fileName","j","replaceAll","result","map","substring","mkdir","allPackages","commandSelector","push","touch","mv","rm","removedItem","findIndex","el","match","permissions","owner","permissionsCheck","includes","open","su","indexOf","reset","window","location","reload"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\n//import default_files from '../../Resources/constants/default_files.json'\r\n\r\nconst initializeLocalStorage = () =>{\r\n    let tree = localStorage.getItem('i-d-files');\r\n    if(tree !== null)\r\n        return\r\n    \r\n  //  saveData(default_files)\r\n}\r\n\r\nconst saveData = (tree) => {\r\n    let stringFileStructure = JSON.stringify(tree)\r\n    localStorage.setItem('i-d-files',stringFileStructure)\r\n}\r\n\r\nexport default class OS extends React.Component{\r\n    \r\n    user = 'Remember to mint your exclusive membership'\r\n    tree\r\n    currentDirectory\r\n\r\n    terminalString = this.user\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        initializeLocalStorage();\r\n        this.tree = JSON.parse(localStorage.getItem('i-files'))\r\n        this.currentDirectory = this.tree\r\n    }\r\n\r\n    ls(){\r\n        return this.currentDirectory\r\n    }\r\n\r\n    cd(parameters,path){\r\n\r\n        let numberOfReversals = parameters.split('..').length - 1\r\n\r\n        let absoluteSystemPath = path.split('/')\r\n        if(numberOfReversals >= absoluteSystemPath.length)\r\n            return ''\r\n\r\n        //console.log('numberofrev:' + numberOfReversals  + 'before')\r\n        //console.log(absoluteSystemPath)\r\n        for(let i = 0; i < numberOfReversals; i++){\r\n            absoluteSystemPath.pop()\r\n        }\r\n\r\n        let temp = [...absoluteSystemPath]\r\n        let subDirectory = this.tree;\r\n        for(let name in temp.splice(0,1)){\r\n            name = temp[name]\r\n            let index = -1;\r\n            subDirectory.forEach((item,ind)=>{\r\n                if(item.name === name && item.type === 'folder')\r\n                    index = ind\r\n            })\r\n            if(index >= 0)\r\n                subDirectory = subDirectory[index].children;\r\n        }        \r\n\r\n\r\n        if(numberOfReversals <= 0){\r\n            let locations = parameters.split('/')\r\n            let cumalitivePath = path\r\n            for(let i = 0; i < locations.length;i++){\r\n                let fileName = locations[i];\r\n                for(let j = 0; j < this.currentDirectory.length; j++){\r\n                    let item = this.currentDirectory[j]\r\n                    if(item.name === fileName && item.type === 'folder'){\r\n                        this.terminalString = item.path\r\n                        this.currentDirectory = item.children;\r\n                        \r\n                        cumalitivePath += '/' + item.name\r\n                        cumalitivePath = cumalitivePath.replaceAll(' ','')\r\n                    }\r\n                }\r\n            }\r\n            return cumalitivePath + ' ';\r\n        }\r\n        else{\r\n            this.currentDirectory = subDirectory;\r\n\r\n            let result = ''\r\n            absoluteSystemPath.map((item)=>result += '/' + item)\r\n            result = result.replaceAll(' ','')\r\n            return result.substring(1) + ' ' \r\n        }\r\n    }\r\n\r\n    mkdir(allPackages){\r\n        const { path, commandSelector } = allPackages\r\n        let absoluteSystemPath = path.split('/')\r\n        this.currentDirectory.push(\r\n            {\r\n                \"type\" : \"folder\",\r\n                \"name\" : commandSelector[1],\r\n                \"path\" : \"/\" + absoluteSystemPath[absoluteSystemPath.length - 2],\r\n                \"privileges\" : [\"read\",\"write\",\"execute\"],\r\n                \"owner\" : [this.user],\r\n                \"children\":[]\r\n            }\r\n        )\r\n        this.tree[absoluteSystemPath] = this.currentDirectory\r\n        saveData(this.tree)\r\n        \r\n    }\r\n\r\n    touch(allPackages){\r\n        const { path, commandSelector } = allPackages\r\n        let absoluteSystemPath = path.split('/')\r\n        this.currentDirectory.push(\r\n            {\r\n                \"type\" : \"file\",\r\n                \"name\" : commandSelector[1],\r\n                \"path\" : \"/\" + absoluteSystemPath[absoluteSystemPath.length - 2],\r\n                \"privileges\" : [\"read\",\"write\",\"execute\"],\r\n                \"owner\" : [this.user]\r\n            }\r\n        )\r\n        this.tree[absoluteSystemPath] = this.currentDirectory\r\n        saveData(this.tree)\r\n        \r\n    }\r\n\r\n    mv(parameters){\r\n\r\n    }\r\n\r\n    rm(allPackages){\r\n        const { path, commandSelector } = allPackages\r\n        let fileName = commandSelector[1]\r\n        let absoluteSystemPath = path.split('/')\r\n        fileName = fileName.replaceAll('*','.*')\r\n        let removedItem = this.currentDirectory.findIndex((el)=>el.name.match(fileName))\r\n        while(removedItem >= 0){\r\n\r\n            let permissions = this.currentDirectory[removedItem].owner\r\n            let permissionsCheck = (permissions.length === 0 || permissions.includes(this.user))\r\n\r\n            if(permissionsCheck){\r\n                this.currentDirectory.splice(removedItem,1)\r\n                this.tree[absoluteSystemPath] = this.currentDirectory\r\n                saveData(this.tree)\r\n            }\r\n            removedItem = this.currentDirectory.findIndex((el)=>(el.name.match(fileName) && permissionsCheck)) \r\n        }\r\n    }\r\n\r\n    open(parameters){\r\n        let index = this.currentDirectory.findIndex(el=>el.name === parameters)\r\n        if(index >= 0)\r\n            return this.currentDirectory[index].owner\r\n        else\r\n            return false\r\n    }\r\n\r\n    su(user){\r\n        this.terminalString = this.terminalString.substring(this.terminalString.indexOf('@'))\r\n        this.terminalString = user + this.terminalString;\r\n        this.user = user\r\n    }\r\n    \r\n    reset(){\r\n       // saveData(default_files)\r\n        window.location.reload();\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}